plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

    group = 'vikings'
    version = '0.0.1-SNAPSHOT'
    
    java {
    	toolchain {
    		languageVersion = JavaLanguageVersion.of(java_version)
    	}
    }
    
    configurations {
    	compileOnly {
    		extendsFrom annotationProcessor
    	}
    }
    
    repositories {
        gradlePluginPortal()
        google()
    	mavenCentral()
    }
    
    ext {
    	set('springCloudVersion', "2023.0.3")
    }
    
    dependencies {
    	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    	implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
    	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    	implementation "jakarta.servlet:jakarta.servlet-api:6.0.0"

    	compileOnly 'org.projectlombok:lombok'
    	
    	runtimeOnly "org.postgresql:postgresql:${postgresql_version}"
    	annotationProcessor 'org.projectlombok:lombok'
    	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }
    
    dependencyManagement {
    	imports {
    		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${spring_cloud_version}"
    	}
    }
    
    tasks.named('test') {
    	useJUnitPlatform()
    }
    
    tasks.withType(JavaCompile).configureEach {
        sourceCompatibility = java_version
        targetCompatibility = java_version
    }

    wrapper {
        gradleVersion = gradle_wrapper_version
    }
    
    bootRun {
    }
